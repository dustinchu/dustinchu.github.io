<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[提升倉管備料效率-小程式]]></title>
      <url>http://yoursite.com/2017/01/19/avexir%E5%82%99%E6%96%99/</url>
      <content type="html"><![CDATA[<p><div class="fb-comments" data-href="https://dustinchu.github.io/" data-width="500" data-numposts="5"></div><br><a id="more"></a></p>
<h2 id="計算bom表-小程式"><a href="#計算bom表-小程式" class="headerlink" title="計算bom表 小程式"></a>計算bom表 小程式</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote>
<p>版權聲明：轉載請保留原文連結及作者<br>由於公司產品種類太多,User RMA回來數量都一樣兩樣很散<br>一個User要去ERP開一張單,但ERP沒辦法把多張單合併包材<br>集中在一張單,導致倉管必須一張單一張單備料<br>由於這樣實在沒效率,所以寫個小程式把User購買的外部料號KEY在程式裡<br>自動會算出需要的包材數量</p>
</blockquote>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><blockquote>
<p>把外部料號,內部料號打進去會自動算出,倉管需要備東西<br>把客戶名稱日期打上,可以記錄倉管幾月幾號幫RMA備料<br>倉管可以自行反查紀錄,也會紀錄備料人員是誰</p>
</blockquote>
<p><img src="http://i.imgur.com/WgaaUdJ.jpg" width="600" height="600"></p>
<p><img src="http://i.imgur.com/ZoL0VVp.jpg" width="600" height="600"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Textinputlayout使用及自訂義顏色]]></title>
      <url>http://yoursite.com/2017/01/16/Textinputlayout%E4%BD%BF%E7%94%A8%E5%8F%8A%E8%87%AA%E8%A8%82%E7%BE%A9%E9%A1%8F%E8%89%B2/</url>
      <content type="html"><![CDATA[<p><div class="fb-comments" data-href="https://dustinchu.github.io/" data-width="500" data-numposts="5"></div><br><a id="more"></a></p>
<blockquote>
<p>版權聲明：轉載請保留原文連結及作者<br><a href="http://blog.csdn.net/android_freshman/article/details/51136657" target="_blank" rel="external">http://blog.csdn.net/android_freshman/article/details/51136657</a></p>
</blockquote>
<h2 id="Textinputlayout"><a href="#Textinputlayout" class="headerlink" title="Textinputlayout"></a>Textinputlayout</h2><p><img src="http://img.blog.csdn.net/20160412191744125" width="400" height="400"></p>
<h3 id="gradle-配置"><a href="#gradle-配置" class="headerlink" title="gradle 配置"></a>gradle 配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">compile ‘com.Android.support:design:<span class="number">22.2</span>.0’</div><div class="line">compile ‘com.android.support:appcompat-v7:<span class="number">22.2</span>.0’</div></pre></td></tr></table></figure>
<h3 id="xml"><a href="#xml" class="headerlink" title="xml"></a>xml</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> android.widget.LinearLayout.<span class="function">LayoutParams    <span class="title">setEditText</span><span class="params">(EditText editText,  LayoutParams lp)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.mEditText != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"We already have an EditText, can only    have one"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div></pre></td></tr></table></figure>
<blockquote>
<p>注意點：部分源代碼中的內容，<code>TextInputLayout</code> 繼承<code>LinearLayout</code> 且裡面只能有一個editEditText，和scrollView 很像。下面是佈局文件：</p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">&lt;android.support.design.widget.TextInputLayout</div><div class="line">                android:id="@+id/titleTextInput"</div><div class="line">                android:layout_width="match_parent"</div><div class="line">                android:layout_height="wrap_content"</div><div class="line">                android:layout_marginTop="10dp"</div><div class="line">                android:layout_marginLeft="40dp"</div><div class="line">                android:layout_marginRight="15dp"</div><div class="line">                app:errorTextAppearance="@style/TextInput_Error_style"&gt;</div><div class="line"></div><div class="line">            &lt;EditText</div><div class="line">                    android:id="@+id/title"</div><div class="line">                    android:layout_width="match_parent"</div><div class="line">                    android:layout_height="wrap_content"</div><div class="line">                    android:textSize="20sp"</div><div class="line">                    android:textColor="@color/white"</div><div class="line">                    android:singleLine="true"</div><div class="line">                    android:hint="Title"/&gt;</div><div class="line">        &lt;/android.support.design.widget.TextInputLayout&gt;</div><div class="line"></div><div class="line">        &lt;android.support.design.widget.TextInputLayout</div><div class="line">                android:id="@+id/descriptionsTextInput"</div><div class="line">                android:layout_width="match_parent"</div><div class="line">                android:layout_height="wrap_content"</div><div class="line">                android:layout_marginLeft="40dp"</div><div class="line">                android:layout_marginRight="15dp"&gt;</div><div class="line"></div><div class="line">            &lt;EditText</div><div class="line">                    android:id="@+id/descriptions"</div><div class="line">                    android:layout_width="match_parent"</div><div class="line">                    android:layout_height="wrap_content"</div><div class="line">                    android:textSize="16sp"</div><div class="line">                    android:textColor="@color/white"</div><div class="line">                    android:hint="Descriptions"/&gt;</div><div class="line">        &lt;/android.support.design.widget.TextInputLayout&gt;</div></pre></td></tr></table></figure>
<h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><p><img src="http://img.blog.csdn.net/20160412192753769" width="600" height="600"></p>
<blockquote>
<p>注意：不能重寫<code>TextInputLayout</code>的<code>OnFocusChangeListener</code>的監聽事件，因為在源代碼中定義了動畫效果和<code>editText</code>注入，重寫了會導致動畫失效。<br>設置浮動標籤動畫效果<br><code>titleTextInput.setHint(“Title”);</code></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(titleEditText.getText().toString().length()&lt;<span class="number">6</span>)&#123;</div><div class="line">   titleTextInput.setErrorEnabled(<span class="keyword">true</span>);</div><div class="line">   titleTextInput.setError(<span class="string">"title length must &gt;= 6"</span>);</div><div class="line">&#125;<span class="keyword">else</span> &#123;</div><div class="line">   titleTextInput.setErrorEnabled(<span class="keyword">false</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>這一部分是動態錯誤提示的相關代碼</p>
</blockquote>
<p>完成上面的，基本就可以出現<code>TextInputLayout</code> 的動畫效果了，但是默認的顏色不是很好看，所以我們需要自定義相關的顏色，比如<code>hint</code> 字的顏色，下劃線的顏色，錯誤字體的顏色大小等，下面就是自定義顏色的部分：</p>
<blockquote>
<p>google把<code>Design Support Library</code>寫的很好。每一個控件的顏色都是直接通過主題顏色繪製的，在<code>style.xml</code> 中指定。打開它添加<code>colorAccent</code> 到主題以改變表單的顏色。在<code>style.xml</code> 中修改相關的屬性</p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar"&gt;</div><div class="line">        &lt;item name="colorPrimary"&gt;@color/primary&lt;/item&gt;</div><div class="line">        &lt;item name="colorPrimaryDark"&gt;@color/primary_dark&lt;/item&gt;</div><div class="line"></div><div class="line">        &lt;!--&lt;item name="colorAccent"&gt;#3498db&lt;/item&gt;--&gt;</div><div class="line">        &lt;item name="android:textColorHint"&gt;@color/alpha_white&lt;/item&gt;</div><div class="line">        &lt;item name="colorControlNormal"&gt;@color/alpha_white&lt;/item&gt;</div><div class="line">        &lt;item name="colorControlActivated"&gt;@color/white&lt;/item&gt;</div><div class="line">        &lt;item name="colorControlHighlight"&gt;@color/white&lt;/item&gt;</div><div class="line">        &lt;item name="android:windowTranslucentStatus"&gt;true&lt;/item&gt;</div><div class="line">    &lt;/style&gt;</div></pre></td></tr></table></figure>
<h3 id="colorAccent-是什麼意思，哪裡的顏色"><a href="#colorAccent-是什麼意思，哪裡的顏色" class="headerlink" title="colorAccent 是什麼意思，哪裡的顏色"></a>colorAccent 是什麼意思，哪裡的顏色</h3><p><img src="http://img.blog.csdn.net/20160412193648976" width="600" height="600"></p>
<blockquote>
<p>這張圖片基本說明了colorAccent代表的顏色，而在google的官網上：<br><a href="https://www.google.com/design/spec/style/color.html#color-color-schemes" target="_blank" rel="external">https://www.google.com/design/spec/style/color.html#color-color-schemes</a> 也有相關的說明</p>
</blockquote>
<p><img src="http://img.blog.csdn.net/20160412194338714" width="600" height="600"></p>
<h3 id="其他相關顏色的說明"><a href="#其他相關顏色的說明" class="headerlink" title="其他相關顏色的說明"></a>其他相關顏色的說明</h3><blockquote>
<p><code>android:textColorHint</code>代表<code>hint</code>的顏色<br><code>colorControlNormal</code>代表下劃線沒有獲取焦點的顏色<br><code>colorControlActivated</code>，<code>colorControlHighlight</code>代表了獲取焦點或者點擊的時候下劃線的顏色</p>
</blockquote>
<h3 id="錯誤提示的顏色說明："><a href="#錯誤提示的顏色說明：" class="headerlink" title="錯誤提示的顏色說明："></a>錯誤提示的顏色說明：</h3><p>默認的錯誤提示的顏色是紅色：在這種背景色下面，紅色不是很好看，所以需要自定義顏色</p>
<p><img src="http://img.blog.csdn.net/20160412194620636
" width="600" height="600"></p>
<blockquote>
<p>在設置佈局的時候<code>errorTextAppearance</code>這個屬性，自定義<code>style</code> 寫顏色和大小就可以了，至於另一個屬性<code>hintTextAppearance</code> 這個屬性修改顏色，好像沒有什麼效果，不起作用。</p>
</blockquote>
<p><img src="http://img.blog.csdn.net/20160412194552436
" width="600" height="600"></p>
<blockquote>
<p>修改之後的效果，如下圖：有的機器上面可能沒有效果，下面提供一種解決方案：</p>
</blockquote>
<p><img src="http://img.blog.csdn.net/20160412195153411
" width="600" height="600"></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setErrorTextColor</span><span class="params">(TextInputLayout textInputLayout, <span class="keyword">int</span> color)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Field fErrorView = TextInputLayout.class.getDeclaredField(<span class="string">"mErrorView"</span>);</div><div class="line">            fErrorView.setAccessible(<span class="keyword">true</span>);</div><div class="line">            TextView mErrorView = (TextView) fErrorView.get(textInputLayout);</div><div class="line">            Field fCurTextColor = TextView.class.getDeclaredField(<span class="string">"mCurTextColor"</span>);</div><div class="line">            fCurTextColor.setAccessible(<span class="keyword">true</span>);</div><div class="line">            fCurTextColor.set(mErrorView, color);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<ul>
<li><a href="https://www.google.com/design/spec/components/text-fields.html#text-fields-multi-line-text-field" target="_blank" rel="external">這個是material design 的說明文檔：</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[EditText 的拍擋 - TextInputLayout]]></title>
      <url>http://yoursite.com/2017/01/14/TextInputLayout/</url>
      <content type="html"><![CDATA[<p><div class="fb-comments" data-href="https://dustinchu.github.io/" data-width="500" data-numposts="5"></div><br><a id="more"></a></p>
<h2 id="toggleButtong"><a href="#toggleButtong" class="headerlink" title="toggleButtong"></a>toggleButtong</h2><blockquote>
<p>版權聲明：轉載請保留原文連結及作者<br><a href="http://blog.30sparks.com/material-design-6-textinputlayout/" target="_blank" rel="external">http://blog.30sparks.com/material-design-6-textinputlayout/</a></p>
</blockquote>
<p>Android Design Support Library 提供一個<code>TextInputLayout</code> 元件，可用來包著 <code>EditText</code>，令 <code>EditText</code> 得到 focus 時，自動將 <code>hints</code> 變成標題：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;android.support.design.widget.TextInputLayout</div><div class="line">        android:id="@+id/til_et_name"</div><div class="line">        android:layout_width="match_parent"</div><div class="line">        android:layout_height="wrap_content"</div><div class="line">        android:layout_below="@id/content_view"</div><div class="line">        &gt;</div><div class="line"></div><div class="line">    &lt;EditText</div><div class="line">            android:id="@+id/et_name"</div><div class="line">            android:layout_width="match_parent"</div><div class="line">            android:layout_height="wrap_content"</div><div class="line">            android:hint="Your name"</div><div class="line">            /&gt;</div><div class="line">&lt;/android.support.design.widget.TextInputLayout&gt;</div></pre></td></tr></table></figure>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="http://blog.30sparks.com/content/images/2016/02/TextInputLayout.gif" width="400" height="400"></p>
<p>一個  <code>TextInputLayout</code> 只能容納一個 <code>EditText</code>，所以每個  <code>EditText</code>都需要自訂各自的  <code>TextInputLayout</code>。</p>
<h3 id="關於-Hint"><a href="#關於-Hint" class="headerlink" title="關於 Hint"></a>關於 Hint</h3><p><code>TextInputLayout</code> 可直接使用 <code>EditText</code> 上的 <code>hint</code>，用來當成 <code>header</code> 。不過，你也可直接設定 <code>hint</code> 到 <code>TextInputLayout</code> 上，它們的效果也是相同的，值得留意的是，你可同時設定 <code>hint</code> 到 <code>TextInputLayout</code> 和 <code>EditText</code> 上。這樣的話，它們一開始會重叠，而當拿到 focus 時，在 <code>TextInputLayout</code> 上的 <code>hint</code> 會被拿來當 <code>header</code> ，而在 <code>EditText</code> 上的會跟以往一樣，有文字輸入後 <code>hint</code> 會消失。不過我想，在正常情況下應該不會這樣做吧？<br><img src="http://blog.30sparks.com/content/images/2016/02/overlapping_hint_focus.jpg" width="400" height="400"></p>
<h3 id="字數統計"><a href="#字數統計" class="headerlink" title="字數統計"></a>字數統計</h3><p>可使用 <code>app:counterEnabled=&quot;true&quot;</code> 和 <code>app:counterMaxLength</code> 可設定顯示輸入文字的長度。<br><img src="http://blog.30sparks.com/content/images/2016/02/2016_02_12_17_16_23a.gif" width="400" height="400"></p>
<h3 id="錯誤訊息"><a href="#錯誤訊息" class="headerlink" title="錯誤訊息"></a>錯誤訊息</h3><p> <code>TextInputLayout</code> 還有另一好處，是可以顯示錯誤訊息。透過  <code>textInputLayout.setError(&quot;Erorr in name input&quot;)</code>便在底部可顯示錯誤訊息。<br> <img src="http://blog.30sparks.com/content/images/2016/02/Error_Msg.png" width="400" height="400"></p>
<p> 例如為我們之前加的 <code>EditText</code> 加進驗証的的話，可以這樣做</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"> <span class="keyword">final</span> TextInputLayout nameLayout = (TextInputLayout)findViewById(R.id.til_et_name);</div><div class="line"><span class="keyword">final</span> EditText nameEditText = (EditText)findViewById(R.id.et_name);</div><div class="line"><span class="keyword">final</span> Button button = (Button) findViewById(R.id.btn_submit);</div><div class="line"></div><div class="line">button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(nameEditText.length() == <span class="number">0</span>)&#123;</div><div class="line">            nameLayout.setError(<span class="string">"Error in name input"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            nameLayout.setError(<span class="keyword">null</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p> 這樣當按 <code>button</code> 時，<code>若 nameEditText</code> 沒有文字的話，便會顯示 “Error in name input”。</p>
<p> 不過有留意到顯示錯誤訊息時，整個 <code>messageEditText</code> 會被推下，因為當初 <code>TextInputLayout</code> 沒有預留空間去顯示錯誤訊息！想避免此情況，可以先設定<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nameLayout.setErrorEnabled(<span class="keyword">true</span>);</div></pre></td></tr></table></figure></p>
<p>或者在 <code>layout xml</code> 上加入<code>app:errorEnabled=&quot;true&quot;</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;android.support.design.widget.TextInputLayout</div><div class="line">        android:id=<span class="string">"@+id/til_et_name"</span></div><div class="line">        android:layout_width=<span class="string">"match_parent"</span></div><div class="line">        android:layout_height=<span class="string">"wrap_content"</span></div><div class="line">        android:layout_below=<span class="string">"@id/content_view"</span></div><div class="line">        app:errorEnabled=<span class="string">"true"</span> &gt;</div></pre></td></tr></table></figure>
<p>這樣，<code>TextInputLayout</code> 便會預留空間去顯示錯誤訊息了。留意的是，你可用 <code>nameLayout. setErrorEnabled(false)</code> 的話，去消除錯誤訊息，但整個<code>layout</code> 會被拉上去 (因錯誤訊息的位置也會被消除)。若不想 <code>layout</code> 移動的話，便應用<code>nameLayout.setError(null)</code> 去消除。</p>
<h2 id="Style"><a href="#Style" class="headerlink" title="Style"></a>Style</h2><h3 id="顏色"><a href="#顏色" class="headerlink" title="顏色"></a>顏色</h3><p>想簡單更改底線顏色的話，可到 <code>style.xml</code> 修改 <code>colorAccent</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar"&gt;</div><div class="line">    &lt;!-- ...other style settings --&gt;</div><div class="line">    &lt;item name="colorAccent"&gt;#0000FF&lt;/item&gt;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
<p><img src="http://blog.30sparks.com/content/images/2016/02/color_style.jpg
" width="400" height="400"></p>
<h3 id="header"><a href="#header" class="headerlink" title="header"></a>header</h3><p>若只想改變 <code>header</code> 顏色 ，可使用 <code>app:hintTextAppearance=&quot;style&quot;</code>。先到 <code>style.xml</code> 中加入 <code>TextInputHint</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;style name="TextInputHint" parent="TextAppearance.AppCompat.Small"&gt;</div><div class="line">    &lt;item name="android:textStyle"&gt;italic&lt;/item&gt;</div><div class="line">    &lt;item name="android:textColor"&gt;#AA2288&lt;/item&gt;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
<p>然後加到 <code>TextInputLayout</code> 加入 <code>app:hintTextAppearance=&quot;@style/TextInputHint &quot;</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;android.support.design.widget.TextInputLayout</div><div class="line">        android:id=<span class="string">"@+id/til_et_name"</span></div><div class="line">        android:layout_width=<span class="string">"match_parent"</span></div><div class="line">        android:layout_height=<span class="string">"wrap_content"</span></div><div class="line">        app:errorEnabled=<span class="string">"true"</span></div><div class="line">        app:hintTextAppearance =<span class="string">"@style/TextInputHint "</span></div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>佷簡單便可修改 <code>header</code> 的風格了。</p>
<h3 id="錯誤訊息-1"><a href="#錯誤訊息-1" class="headerlink" title="錯誤訊息"></a>錯誤訊息</h3><p>要更改錯誤訊息的顏色的話，跟改 <code>header</code>顏色的方法差不多，這次使用的是<code>app:errorTextAppearance</code>。</p>
<ul>
<li>style.xml:</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;style name="TextInputError" parent="TextAppearance.AppCompat.Small"&gt;</div><div class="line">    &lt;item name="android:textStyle"&gt;bold|italic&lt;/item&gt;</div><div class="line">    &lt;item name="android:textColor"&gt;#FF00FF&lt;/item&gt;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
<ul>
<li>layout:</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;android.support.design.widget.TextInputLayout</div><div class="line">        android:id=<span class="string">"@+id/til_et_name"</span></div><div class="line">        android:layout_width=<span class="string">"match_parent"</span></div><div class="line">        android:layout_height=<span class="string">"wrap_content"</span></div><div class="line">        app:errorEnabled=<span class="string">"true"</span></div><div class="line">        app:errorTextAppearance=<span class="string">"@style/TextInputError"</span></div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>這樣便可以自訂錯誤訊息的風格了。<br><img src="http://blog.30sparks.com/content/images/2016/02/error_msg_style.jpg
" width="400" height="400"></p>
<h3 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h3><p>要令文字輸入的 UI 更具動感，<code>TextInputLayout</code> 是一個很方便簡單的工具。快加到你的 UI 中吧。</p>
<h3 id="相關連結"><a href="#相關連結" class="headerlink" title="相關連結"></a>相關連結</h3><ul>
<li><a href="http://blog.30sparks.com/material-design-6-textinputlayout/" target="_blank" rel="external">Material Design Patterns </a></li>
<li><a href="http://blog.30sparks.com/material-design-patterns-tutorial/" target="_blank" rel="external">官方文件 - TextInputLayout</a></li>
<li><a href="https://github.com/codepath/android_guides/wiki/Working-with-the-EditText" target="_blank" rel="external">Working with the EditText</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[java-line聊天分割]]></title>
      <url>http://yoursite.com/2017/01/13/java-line/</url>
      <content type="html"><![CDATA[<p><div class="fb-comments" data-href="https://dustinchu.github.io/" data-width="500" data-numposts="5"></div><br><a id="more"></a></p>
<h2 id="line-聊天記錄-分割"><a href="#line-聊天記錄-分割" class="headerlink" title="line 聊天記錄 分割"></a>line 聊天記錄 分割</h2><blockquote>
<p>版權聲明：轉載請保留原文連結及作者<br>以前想看line紀錄但太長了<br>寫了一個以日期來分聊天記錄的小程式<br>但效率不是很好也沒有太多時間回去在優化他了<br>如果剛學java的可以自己寫一個看看</p>
</blockquote>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="http://i.imgur.com/CEzUzWw.gif" width="400" height="400"></p>
<h2 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h2><blockquote>
<p>把txt讀近來後每一行判斷字串 是否有日期<br>例如<code>2016/01/31（日）</code> 先把日期改成你想要的方式 先儲存一份<br>在讀取新的txt 讀到你更改後的日期格式,把日期存成檔案名稱<br>裡面的內容存到txt裡,讀到下一個日期停止<br>先存一份更改日期的用意是.聊天內容或許會有日期或是/ 會抓錯<br>其他應該很簡單就不再詳細敘述了<br>分割好的內容會自動存在<code>C:\LINE</code>  資料夾內</p>
</blockquote>
<h3 id="下載點"><a href="#下載點" class="headerlink" title="下載點"></a>下載點</h3><ul>
<li><a href="https://1drv.ms/u/s!AlmTUkxGoUrRpE1F-LpqSkcDcZBZ" title="下載點" target="_blank" rel="external">下載點</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[toggleButton]]></title>
      <url>http://yoursite.com/2017/01/05/toggleButton/</url>
      <content type="html"><![CDATA[<p><div class="fb-comments" data-href="https://dustinchu.github.io/" data-width="500" data-numposts="5"></div><br><a id="more"></a></p>
<h2 id="自定義toggleButtong"><a href="#自定義toggleButtong" class="headerlink" title="自定義toggleButtong"></a>自定義toggleButtong</h2><blockquote>
<p>版權聲明：轉載請保留原文連結及作者<br>最近剛好在寫UI順便記錄一下</p>
</blockquote>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="http://i.imgur.com/Rbr8KaW.gif" width="400" height="400"></p>
<h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><ul>
<li>程式碼分成兩類</li>
<li>圖片繪製</li>
<li>點擊事件</li>
</ul>
<h3 id="布局XML"><a href="#布局XML" class="headerlink" title="布局XML"></a>布局XML</h3><ul>
<li>直接打上自定義原件類別名就可</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;com.togg.toggiebutton.CustomToggleButton</div><div class="line">    android:layout_width="wrap_content"</div><div class="line">    android:layout_height="wrap_content"</div><div class="line">    android:background="@drawable/tb_backround"</div><div class="line">    android:id="@+id/view"&gt;</div><div class="line"></div><div class="line">&lt;/com.togg.toggiebutton.CustomToggleButton&gt;</div></pre></td></tr></table></figure>
<h3 id="onMeasure"><a href="#onMeasure" class="headerlink" title="onMeasure"></a>onMeasure</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</div><div class="line"></div><div class="line">        <span class="comment">//底層圖片</span></div><div class="line">        backBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.tb_backround);</div><div class="line">        <span class="comment">//上層圖片</span></div><div class="line">        overBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.slide_backround);</div><div class="line">        <span class="comment">//寬高和底層圖片一樣</span></div><div class="line">        setMeasuredDimension(backBitmap.getWidth(), backBitmap.getHeight());</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="onDraw"><a href="#onDraw" class="headerlink" title="onDraw"></a>onDraw</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line"></div><div class="line"></div><div class="line">       <span class="comment">//2.繪制上層圖片</span></div><div class="line">       <span class="keyword">if</span> (isTounching) &#123;<span class="comment">//上層圖片跟随滑動</span></div><div class="line">           <span class="comment">/**</span></div><div class="line">            * * 防止上層圖片滑動出下層圖片的范围</div><div class="line">            */</div><div class="line">           <span class="comment">//算出當前觸碰點為上層圖片的中心點時，上層圖片的左侧座標距離</span></div><div class="line">           <span class="keyword">int</span> left = currentX - overBitmap.getWidth() / <span class="number">2</span>;</div><div class="line">           System.out.println(left + <span class="string">"left 數值"</span> + currentX + <span class="string">"currentx"</span>);</div><div class="line">           <span class="keyword">if</span> (left &lt; <span class="number">0</span>) &#123;<span class="comment">//防止左侧出界</span></div><div class="line">               left = <span class="number">0</span>;</div><div class="line">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (left &gt; backBitmap.getWidth() - overBitmap.getWidth()) &#123;<span class="comment">//防止右侧出界</span></div><div class="line">               left = backBitmap.getWidth() - overBitmap.getWidth();</div><div class="line">           &#125;</div><div class="line">           canvas.drawBitmap(overBitmap, left, <span class="number">0</span>, <span class="keyword">null</span>);</div><div class="line"></div><div class="line">       &#125; <span class="keyword">else</span> &#123;<span class="comment">//上層圖片直接跳到開或關的位置</span></div><div class="line">           <span class="keyword">if</span> (state) &#123;</div><div class="line">               <span class="comment">//開</span></div><div class="line">               canvas.drawBitmap(overBitmap, backBitmap.getWidth() - overBitmap.getWidth(), <span class="number">0</span>, <span class="keyword">null</span>);</div><div class="line"></div><div class="line">               listener.rightClick();</div><div class="line">           &#125; <span class="keyword">else</span> &#123;</div><div class="line">               <span class="comment">//關</span></div><div class="line">               canvas.drawBitmap(overBitmap, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>);</div><div class="line">               listener.leftClick();</div><div class="line"></div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h3 id="onTouchEvent"><a href="#onTouchEvent" class="headerlink" title="onTouchEvent"></a>onTouchEvent</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (event.getAction()) &#123;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</div><div class="line">                <span class="comment">//按下為true</span></div><div class="line">                isTounching = <span class="keyword">true</span>;</div><div class="line">                <span class="comment">//當前觸碰點的x座標</span></div><div class="line">                currentX = (<span class="keyword">int</span>) event.getX();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</div><div class="line">                isTounching = <span class="keyword">true</span>;</div><div class="line">                currentX = (<span class="keyword">int</span>) event.getX();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</div><div class="line">                <span class="comment">//抬起時觸碰狀態為false</span></div><div class="line">                isTounching = <span class="keyword">false</span>;</div><div class="line">                currentX = (<span class="keyword">int</span>) event.getX();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//觸碰點超過底層圖片的一半，則state為true,開的狀態</span></div><div class="line">        state = currentX &gt; backBitmap.getWidth() / <span class="number">2</span>;</div><div class="line">        <span class="comment">//重新繪制</span></div><div class="line">        invalidate();</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="點擊"><a href="#點擊" class="headerlink" title="點擊"></a>點擊</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> topbarClickListener listener;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">topbarClickListener</span> </span>&#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">leftClick</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rightClick</span><span class="params">()</span></span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOntopbarClickListener</span><span class="params">(topbarClickListener listener)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.listener = listener;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="MainActivity"><a href="#MainActivity" class="headerlink" title="MainActivity"></a>MainActivity</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">CustomToggleButton cust = (CustomToggleButton) findViewById(R.id.view);</div><div class="line">       cust.setOntopbarClickListener(<span class="keyword">new</span> CustomToggleButton.topbarClickListener() &#123;</div><div class="line">           <span class="meta">@Override</span></div><div class="line">           <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">leftClick</span><span class="params">()</span> </span>&#123;</div><div class="line">               Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"left click"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           <span class="meta">@Override</span></div><div class="line">           <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rightClick</span><span class="params">()</span> </span>&#123;</div><div class="line">               Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"right click"</span>,Toast.LENGTH_SHORT).show();</div><div class="line">           &#125;</div><div class="line">       &#125;);</div></pre></td></tr></table></figure>
<h3 id="結尾"><a href="#結尾" class="headerlink" title="結尾"></a>結尾</h3><ul>
<li>這個樣子可直接在你要使用的類 直接new就可以直接使用了</li>
<li>如果要使用各式各樣的開關 只需更改圖片 就可直接使用了</li>
<li>如果一個程式要使用多種開關 把onMeasure 裡面的底層 上層圖寫成外部輸入圖就可</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2016 end]]></title>
      <url>http://yoursite.com/2016/12/31/2016-end/</url>
      <content type="html"><![CDATA[<div class="fb-comments" data-href="https://dustinchu.github.io/" data-width="500" data-numposts="5"></div>



<a id="more"></a>
<blockquote>
<p>離起點又遠了一些,離終點又進了一點<br>無論今天在困難,明天終究會到來<br>無論今年發生多少事,到了明年還是會變成回憶中的故事<br>這一切終究會拼湊成一個一個完整的人生<br>新的一年,不要忘了完成那些該完成的事情<br>謝謝周遭的許多人幫助了我非常非常多的事情<br>有了你們這一切才會變成可行的事情</p>
</blockquote>
<h2 id="2016"><a href="#2016" class="headerlink" title="2016"></a>2016</h2><h3 id="年度總結"><a href="#年度總結" class="headerlink" title="年度總結"></a>年度總結</h3><blockquote>
<p>今年接了幾個開發的案子,經歷了一大段很挫折壓力大到爆表的日子<br>也接了幾個私人伺服器的協助開發,這段日子應該算是最快樂的,有錢賺還可以玩遊戲XDD<br>也謝謝幾位高材生協助指導讓我完成這一串事情..<br>整年度大部分時間都在學著嵌入式開發,當要開發的時候C已經忘得差不多了,花了很多的時間在學這一部分,在硬體開發部分由於對於電路不是很懂,有時候並不是代碼有寫錯而是電路的問題,常常在浪費時間在原地打轉.<br>每當回去寫APP的時候都會忘記那時候到底在寫什麼,寫到了哪裡,那時候在想什麼<br>年初給自己的目標,完成了六成,希望明年可以在努力一點<br>今年應該算是最枯燥的一年,但今年的知識吸收量應該是以前的好幾倍,已結果來說還蠻滿意的<br>年底架設了這個部落格,慢慢的會把自己所開發的過程放上來,如果有時間會把一些開源<br>也慢慢的會把evernote上記錄的資料也移過來</p>
</blockquote>
<h3 id="2016書單"><a href="#2016書單" class="headerlink" title="2016書單"></a>2016書單</h3><ul>
<li><a href="http://www.books.com.tw/products/0010706748" target="_blank" rel="external">學失敗：創業熱時代看不見的退場故事</a></li>
<li><a href="http://www.books.com.tw/products/0010726913" target="_blank" rel="external">創業投資聖經：Startup募資、天使投資人、投資契約、談判策略全方位教戰法則</a></li>
<li><a href="http://www.books.com.tw/products/0010444824" target="_blank" rel="external">免費！揭開零定價的獲利祕密</a></li>
<li><a href="http://www.books.com.tw/products/0010650785" target="_blank" rel="external">自己的品牌自己做：企業自媒化，營造忠實顧客群的品牌經營方針</a></li>
<li><a href="http://www.books.com.tw/products/0010443906" target="_blank" rel="external">競爭論</a></li>
<li><a href="http://www.books.com.tw/products/0010316887" target="_blank" rel="external">創業的藝術</a></li>
<li><a href="http://www.books.com.tw/products/0010482162" target="_blank" rel="external">工作大解放：這樣做事反而更成功</a></li>
<li><a href="http://www.books.com.tw/products/0010651050?loc=P_asb_001" target="_blank" rel="external">從0到1：打開世界運作的未知祕密，在意想不到之處發現價值</a></li>
<li><a href="http://www.books.com.tw/products/0010567907" target="_blank" rel="external">全方位把玩Android 400個API：精挑細選365個實例說明</a></li>
<li><a href="http://www.books.com.tw/products/CN11296520" target="_blank" rel="external">ARM Cortex-M4+Wi-Fi MCU應用指南：CC3200 CCS基礎篇</a></li>
<li><a href="http://www.books.com.tw/products/CN11294878" target="_blank" rel="external">ARM Cortex-M3與Cortex-M4權威指南</a></li>
<li><a href="http://www.taaze.tw/sing.html?pid=11100581719" target="_blank" rel="external">拖延心理學：為什麼我老是愛拖延？是與生俱來的壞習慣，還是身不由己？</a></li>
<li><a href="http://www.books.com.tw/products/CN10159901" target="_blank" rel="external">創新者的窘境</a></li>
<li><a href="http://www.books.com.tw/products/0010704999" target="_blank" rel="external">30年心血，品牌之父艾克終於說出的品牌王道：微軟、可口可樂、麥當勞、三星、P&amp;G，全球行銷長都在讀的20終極法則</a><blockquote>
<p>今年淺讀了這些書,雖然還有幾本還沒讀完..!!!!!<br>2016也訂了一年份的空中英語教室月刊希望明年的今天語言部分可以進步很多</p>
</blockquote>
</li>
</ul>
<h2 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h2><h3 id="2017-年度計畫"><a href="#2017-年度計畫" class="headerlink" title="2017 年度計畫"></a>2017 年度計畫</h3><blockquote>
<p>今年預計後半年要花點時間學<code>python</code> 今年也會開始學<code>Machine Learning</code><br>很大部分會完成2016該完成還沒完成的事情,加上一點突發狀況明年應該就這樣結束了<br>慢慢的習慣把學習紀錄,資料記錄寫到部落格上</p>
</blockquote>
<h3 id="2017-書單"><a href="#2017-書單" class="headerlink" title="2017 書單"></a>2017 書單</h3><ul>
<li><a href="http://www.books.com.tw/products/CN11222339" target="_blank" rel="external">引爆社群：移動互聯網時代的新4C法則</a></li>
<li><a href="http://m.sanmin.com.tw/Product/Index/004775321" target="_blank" rel="external">稀缺：我們是如何陷入貧窮與忙碌的</a></li>
<li><a href="http://www.books.com.tw/products/0010719054?utm_source=bnextbook&amp;utm_medium=ap-books&amp;utm_content=recommend&amp;utm_campaign=ap-201612" target="_blank" rel="external">TED TALKS 說話的力量：你可以用言語來改變自己，也改變世界 TED唯一官方版演講指南</a></li>
<li><a href="http://www.books.com.tw/products/0010719054" target="_blank" rel="external">不懂帶團隊，那就大家一起死！：行為科學教你把豬一般的隊友變菁英</a></li>
<li><a href="http://www.books.com.tw/products/0010710713" target="_blank" rel="external">沒經驗，是你最大優勢</a></li>
<li><a href="http://www.books.com.tw/products/0010707931" target="_blank" rel="external">賽局理論，解決問題最簡單的方法</a></li>
<li><a href="http://www.books.com.tw/products/0010704924" target="_blank" rel="external">文案力：如果沒有文案，這世界會有多無聊？</a></li>
<li><a href="http://www.books.com.tw/products/0010719951" target="_blank" rel="external">釣愚：操縱與欺騙的經濟學</a></li>
<li><a href="http://www.books.com.tw/products/0010739372" target="_blank" rel="external">Python 自動化的樂趣｜搞定重複瑣碎 &amp;單調無聊的工作</a></li>
<li><a href="http://www.books.com.tw/products/0010733037" target="_blank" rel="external">解事者：複雜的事物我簡單說明白</a></li>
<li><a href="http://www.books.com.tw/products/0010664021" target="_blank" rel="external">如果這樣，會怎樣？：胡思亂想的搞怪趣問 正經認真的科學妙答</a></li>
<li><p><a href="http://www.books.com.tw/products/0010664048" target="_blank" rel="external">商業冒險：華爾街的12個經典故事</a></p>
</li>
<li><p>如果中途有看到喜歡的書在新增上來</p>
</li>
</ul>
<h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><blockquote>
<p>想起曾經前陣子跟朋友討論一本俄羅斯的小說裡面有段話挺有趣的<br><code>真正的窮人,是那種群聚在一起的人,而孑然一身的窮人,不過是沒賺到錢的有錢人罷了</code></p>
<p>任何值得去的地方 都沒有捷徑<br>努力配得上你的夢想<br>那麼你的夢想也不會辜負你的努力<br>送給自己一句話<br><code>自律能讓你更優秀 加油！！！！</code><br><code>2016再見 2017加油!!</code></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[FragmentPagerAdapter+ViewPager 實現TabLayout]]></title>
      <url>http://yoursite.com/2016/12/15/My-New-post/</url>
      <content type="html"><![CDATA[<p><div class="fb-comments" data-href="https://dustinchu.github.io/" data-width="500" data-numposts="5"></div><br><a id="more"></a></p>
<h2 id="FragmentPagerAdapter-ViewPager-實現TabLayout"><a href="#FragmentPagerAdapter-ViewPager-實現TabLayout" class="headerlink" title="FragmentPagerAdapter+ViewPager 實現TabLayout"></a>FragmentPagerAdapter+ViewPager 實現TabLayout</h2><blockquote>
<p>版權聲明：轉載請保留原文連結及作者<br>最近剛好在寫UI順便記錄一下<br>在安卓5.0有新增了<code>TabLauout</code>但他並不能滿足很多時候想顯示的樣子<br>所以使用<code>V4</code>下的<code>FragmentPagerAdapter</code>來實現.請記得都要<code>import v4</code> 否則會報錯<br>呈現的效果如下</p>
</blockquote>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="http://i.imgur.com/fmLjQC2.gif" width="400" height="400"></p>
<h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><ul>
<li>程式碼分成四類</li>
<li><code>FragmentPagerAdapter</code></li>
<li><code>ArrayList&lt;Fragment&gt;()</code></li>
<li>初始化三個布局</li>
<li>更改點擊的布局屬性</li>
</ul>
<h3 id="布局XML"><a href="#布局XML" class="headerlink" title="布局XML"></a>布局XML</h3><ul>
<li>從上面的效果可以看的出來</li>
<li>沒選重的狀況下其他兩個字體大小要一置 選重的要變大</li>
<li>下底線要與字體長度一樣</li>
<li><p>程式碼如下</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"> &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"</div><div class="line">    android:layout_width="match_parent"</div><div class="line">    android:layout_height="55dp"</div><div class="line">    android:paddingLeft="16dp"</div><div class="line">    android:paddingRight="16dp"</div><div class="line">    android:orientation="horizontal"&gt;</div><div class="line"></div><div class="line">    &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"</div><div class="line">        android:layout_width="match_parent"</div><div class="line">        android:layout_height="match_parent"</div><div class="line">        android:gravity="center"</div><div class="line">        android:orientation="horizontal"&gt;</div><div class="line"></div><div class="line">        &lt;LinearLayout</div><div class="line">            android:id="@+id/id_tab_trend"</div><div class="line">            android:layout_width="0dp"</div><div class="line">            android:layout_height="wrap_content"</div><div class="line">            android:gravity="center"</div><div class="line">            android:layout_weight="1"</div><div class="line">            android:orientation="vertical"&gt;</div><div class="line"></div><div class="line">            &lt;TextView</div><div class="line">                android:id="@+id/id_tab_tv_trend"</div><div class="line">                android:layout_width="wrap_content"</div><div class="line">                android:layout_height="wrap_content"</div><div class="line">                android:layout_gravity="center"</div><div class="line">                android:textColor="#D6EDC6" /&gt;</div><div class="line">            &lt;ImageView</div><div class="line">                android:id="@+id/id_tab_trend_img"</div><div class="line">                android:layout_width="wrap_content"</div><div class="line">                android:layout_height="wrap_content"</div><div class="line">                android:background="@drawable/tabline"</div><div class="line">                android:layout_gravity="center"</div><div class="line">                android:layout_marginTop="5dp"/&gt;</div><div class="line">        &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">        &lt;LinearLayout</div><div class="line">            android:id="@+id/id_tab_surrounding"</div><div class="line">            android:layout_width="0dp"</div><div class="line">            android:layout_height="wrap_content"</div><div class="line">            android:gravity="center"</div><div class="line">            android:layout_weight="1"</div><div class="line">            android:orientation="vertical"&gt;</div><div class="line"></div><div class="line">            &lt;TextView</div><div class="line">                android:id="@+id/id_tab_tv_sourrounding"</div><div class="line">                android:layout_width="wrap_content"</div><div class="line">                android:layout_height="wrap_content"</div><div class="line">                android:layout_gravity="center"</div><div class="line">                android:textColor="#D6EDC6" /&gt;</div><div class="line">            &lt;ImageView</div><div class="line">                android:id="@+id/id_tab_surrounding_img"</div><div class="line">                android:layout_width="wrap_content"</div><div class="line">                android:layout_height="wrap_content"</div><div class="line">                android:background="@drawable/tabline"</div><div class="line">                android:layout_gravity="center"</div><div class="line">                android:layout_marginTop="5dp"/&gt;</div><div class="line">        &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">        &lt;LinearLayout</div><div class="line">            android:id="@+id/id_tab_appliances"</div><div class="line">            android:layout_width="0dp"</div><div class="line">            android:layout_height="wrap_content"</div><div class="line">            android:gravity="center"</div><div class="line">            android:layout_weight="1"</div><div class="line">            android:orientation="vertical"&gt;</div><div class="line"></div><div class="line">            &lt;TextView</div><div class="line">                android:id="@+id/id_tab_tv_appliances"</div><div class="line">                android:layout_width="wrap_content"</div><div class="line">                android:layout_height="wrap_content"</div><div class="line">                android:layout_gravity="center"</div><div class="line">                android:textColor="#D6EDC6" /&gt;</div><div class="line">            &lt;ImageView</div><div class="line">                android:id="@+id/id_tab_appliances_img"</div><div class="line">                android:layout_width="wrap_content"</div><div class="line">                android:layout_height="wrap_content"</div><div class="line">                android:background="@drawable/tabline"</div><div class="line">                android:layout_gravity="center"</div><div class="line">                android:layout_marginTop="5dp"/&gt;</div><div class="line">        &lt;/LinearLayout&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>在一個<code>LinearLayout</code>裡面 再放三個`LinearLayout``</p>
</li>
<li>按照比例分配`android:layout_weight=”1”``</li>
<li>點擊後在程式碼將點擊的<code>layout_weight</code> 改成你要的比例在把字體放大</li>
</ul>
<h3 id="Fragment"><a href="#Fragment" class="headerlink" title="Fragment"></a>Fragment</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mFragment = <span class="keyword">new</span> ArrayList&lt;Fragment&gt;();</div><div class="line">       Fragment mTab01 = <span class="keyword">new</span> TrendFragment();</div><div class="line">       Fragment mTab02 = <span class="keyword">new</span> SurroundingFragment();</div><div class="line">       Fragment mTab03 = <span class="keyword">new</span> AppliancesFragment();</div><div class="line">       mFragment.add(mTab01);</div><div class="line">       mFragment.add(mTab02);</div><div class="line">       mFragment.add(mTab03);</div></pre></td></tr></table></figure>
<h3 id="FragmentPagerAdapter"><a href="#FragmentPagerAdapter" class="headerlink" title="FragmentPagerAdapter"></a>FragmentPagerAdapter</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">mAdapter = <span class="keyword">new</span> FragmentPagerAdapter(getSupportFragmentManager()) &#123;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> Fragment <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line"></div><div class="line">                <span class="keyword">return</span> mFragment.get(position);</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> mFragment.size();</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        mViewPager.setAdapter(mAdapter);</div><div class="line">        <span class="comment">// Touch Replace the content area</span></div><div class="line">        mViewPager.setOnPageChangeListener(<span class="keyword">new</span> ViewPager.OnPageChangeListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrolled</span><span class="params">(<span class="keyword">int</span> position, <span class="keyword">float</span> positionOffset, <span class="keyword">int</span> positionOffsetPixels)</span> </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageSelected</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">                <span class="keyword">int</span> currentItem = mViewPager.getCurrentItem();</div><div class="line">                setTab(currentItem);</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrollStateChanged</span><span class="params">(<span class="keyword">int</span> state)</span> </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="重置"><a href="#重置" class="headerlink" title="重置"></a>重置</h3><ul>
<li>這邊來判斷字的寬度 來依照讀取的寬度來設定線的長度</li>
<li>這邊只貼其中一組 textview ImageView 請在自行補上其他的<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">resetColor</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line"></div><div class="line">        mTvTrend.setTextColor(getResources().getColor(R.color.tab_not_selectedl_Color));</div><div class="line">        mTvTrend.setTextSize(NOT_SELECTED);</div><div class="line">        mTvTrend.setText(one);</div><div class="line">        mTabTrend.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(<span class="number">0</span>, LinearLayoutCompat.LayoutParams.WRAP_CONTENT, <span class="number">1.0f</span>));</div><div class="line">        mTabtrendImg.setBackgroundResource(R.drawable.tabline);</div><div class="line">        mTvTrend.measure(<span class="number">0</span>, <span class="number">0</span>);</div><div class="line">        LinearLayout.LayoutParams trend = <span class="keyword">new</span> LinearLayout.LayoutParams(mTvTrend.getMeasuredWidth(), LinearLayout.LayoutParams.WRAP_CONTENT);</div><div class="line">        mTabtrendImg.setLayoutParams(trend);</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="點擊"><a href="#點擊" class="headerlink" title="點擊"></a>點擊</h3><ul>
<li>在點擊的時候先呼叫一次<code>resetColor();</code></li>
<li>在設定布局比例 文字大小</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line"></div><div class="line">       <span class="keyword">switch</span> (v.getId()) &#123;</div><div class="line">           <span class="keyword">case</span> R.id.id_tab_trend:</div><div class="line">               setSelect(<span class="number">0</span>);</div><div class="line">               <span class="keyword">break</span>;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSelect</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</div><div class="line">    resetColor();</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">switch</span> (i) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">            mTabTrend.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(<span class="number">0</span>, LinearLayout.LayoutParams.WRAP_CONTENT, <span class="number">1.5f</span>));</div><div class="line">            mTvTrend.setTextColor(getResources().getColor(R.color.tab_selectedl_Color));</div><div class="line">            mTvTrend.setTextSize(SELECTED);</div><div class="line">            mTvTrend.setText(<span class="string">"O N E"</span>);</div><div class="line">            mTabtrendImg.setBackgroundResource(R.drawable.tablineselect);</div><div class="line">            mTvTrend.measure(<span class="number">0</span>, <span class="number">0</span>);</div><div class="line">            LinearLayout.LayoutParams trend = <span class="keyword">new</span> LinearLayout.LayoutParams(mTvTrend.getMeasuredWidth(), LinearLayout.LayoutParams.WRAP_CONTENT);</div><div class="line">            mTabtrendImg.setLayoutParams(trend);</div><div class="line">            <span class="keyword">break</span>;</div></pre></td></tr></table></figure>
<h3 id="滑動"><a href="#滑動" class="headerlink" title="滑動"></a>滑動</h3><ul>
<li>別忘了上面寫的ViewPage事件</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageSelected</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">               <span class="keyword">int</span> currentItem = mViewPager.getCurrentItem();</div><div class="line">               setTab(currentItem);</div><div class="line"></div><div class="line">           &#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSelect</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</div><div class="line">       resetColor();</div><div class="line"></div><div class="line"></div><div class="line">       <span class="keyword">switch</span> (i) &#123;</div><div class="line">           <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">               mTabTrend.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(<span class="number">0</span>, LinearLayout.LayoutParams.WRAP_CONTENT, <span class="number">1.5f</span>));</div><div class="line">               mTvTrend.setTextColor(getResources().getColor(R.color.tab_selectedl_Color));</div><div class="line">               mTvTrend.setTextSize(SELECTED);</div><div class="line">               mTvTrend.setText(<span class="string">"O N E"</span>);</div><div class="line">               mTabtrendImg.setBackgroundResource(R.drawable.tablineselect);</div><div class="line">               mTvTrend.measure(<span class="number">0</span>, <span class="number">0</span>);</div><div class="line">               LinearLayout.LayoutParams trend = <span class="keyword">new</span> LinearLayout.LayoutParams(mTvTrend.getMeasuredWidth(), LinearLayout.LayoutParams.WRAP_CONTENT);</div><div class="line">               mTabtrendImg.setLayoutParams(trend);</div><div class="line">               <span class="keyword">break</span>;</div></pre></td></tr></table></figure>
<h3 id="結尾"><a href="#結尾" class="headerlink" title="結尾"></a>結尾</h3><ul>
<li>程式碼可以在寫一個<code>class</code>來去放 這樣會比較好維護一點</li>
<li>下底線圖片要改成<code>.9</code>會比較好一點</li>
</ul>
]]></content>
    </entry>
    
  
  
</search>
